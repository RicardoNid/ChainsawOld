package Chainsaw.crypto.kyber

import Chainsaw.DFG._
import Chainsaw._
import Chainsaw.crypto.kyber.Reduce.{csubq, montgomeryReduce}
import Chainsaw.crypto.kyber._
import Chainsaw.crypto.symmetric._
import Chainsaw.dspTest._
import spinal.core._
import spinal.core.sim._
import spinal.lib._

import scala.collection.immutable
import scala.collection.mutable.ArrayBuffer
import scala.language.postfixOps

object Ntt {

  val zetas = Array(2285, 2571, 2970, 1812, 1493, 1422, 287, 202, 3158, 622, 1577, 182, 962, 2127, 1855, 1468, 573, 2004, 264, 383, 2500, 1458, 1727, 3199,
    2648, 1017, 732, 608, 1787, 411, 3124, 1758, 1223, 652, 2777, 1015, 2036, 1491, 3047, 1785, 516, 3321, 3009, 2663, 1711, 2167, 126, 1469, 2476, 3239, 3058,
    830, 107, 1908, 3082, 2378, 2931, 961, 1821, 2604, 448, 2264, 677, 2054, 2226, 430, 555, 843, 2078, 871, 1550, 105, 422, 587, 177, 3094, 3038, 2869, 1574,
    1653, 3083, 778, 1159, 3182, 2552, 1483, 2727, 1119, 1739, 644, 2457, 349, 418, 329, 3173, 3254, 817, 1097, 603, 610, 1322, 2044, 1864, 384, 2114, 3193,
    1218, 1994, 2455, 220, 2142, 1670, 2144, 1799, 2051, 794, 1819, 2475, 2459, 478, 3221, 3021, 996, 991, 958, 1869, 1522, 1628)

  val zetas_inv = Array(1701, 1807, 1460, 2371, 2338, 2333, 308, 108, 2851, 870, 854, 1510, 2535, 1278, 1530, 1185, 1659, 1187, 3109, 874, 1335, 2111, 136,
    1215, 2945, 1465, 1285, 2007, 2719, 2726, 2232, 2512, 75, 156, 3000, 2911, 2980, 872, 2685, 1590, 2210, 602, 1846, 777, 147, 2170, 2551, 246, 1676, 1755,
    460, 291, 235, 3152, 2742, 2907, 3224, 1779, 2458, 1251, 2486, 2774, 2899, 1103, 1275, 2652, 1065, 2881, 725, 1508, 2368, 398, 951, 247, 1421, 3222, 2499,
    271, 90, 853, 1860, 3203, 1162, 1618, 666, 320, 8, 2813, 1544, 282, 1838, 1293, 2314, 552, 2677, 2106, 1571, 205, 2918, 1542, 2721, 2597, 2312, 681, 130,
    1602, 1871, 829, 2946, 3065, 1325, 2756, 1861, 1474, 1202, 2367, 3147, 1752, 2707, 171, 3127, 3042, 1907, 1836, 1517, 359, 758, 1441)

  def fqmul(a: SInt, b: SInt): SInt = {
    montgomeryReduce(a * b)
  }

  def ntt(r: Array[SInt]): Array[SInt] = {
    var k       = 1
    var len     = 128
    var rnRound = ArrayBuffer[Array[SInt]](r)
    var ret     = r
    while (len >= 2) {
      var i = 0
      while (i < 256) {
        var j = i
        while (j < (i + len)) {
          val t = fqmul(zetas(k), ret(j + len));
          ret(j + len) = ret(j) - t
          ret(j)       = ret(j) + t
          j            = j + 1
        }
        i = j + len
        k = k + 1
      }
      len = len >> 1
    }
    ret
  }

  case class nttComponent() extends Component with DSPTestable[Vec[SInt], Vec[SInt]] {
    override val dataIn: Flow[Vec[SInt]]  = slave Flow Vec(SInt(16 bits), 256)
    override val dataOut: Flow[Vec[SInt]] = master Flow Vec(SInt(16 bits), 256)
    override val latency: int32           = 1

    dataOut.payload := RegNext(Vec(ntt(dataIn.payload.toArray)))
    dataOut.valid   := Delay(dataIn.valid, latency, init = False)
  }

}

object TestNtt {
  def main(args: Array[String]): Unit = {
    val testvalue = Seq.fill(256)(0).zipWithIndex.map { case (i, kk) =>
      BigInt(kk)
    }
    val Goldenvalue = Seq(
      "5758",
      "-484",
      "3754",
      "-2534",
      "5194",
      "-1973",
      "7282",
      "31",
      "2483",
      "2197",
      "2725",
      "-661",
      "2707",
      "3846",
      "4817",
      "2194",
      "1971",
      "4132",
      "4251",
      "3560",
      "2319",
      "613",
      "1075",
      "3935",
      "3635",
      "-186",
      "4709",
      "2718",
      "4484",
      "531",
      "7476",
      "-1743",
      "2874",
      "155",
      "304",
      "-1887",
      "-710",
      "-1617",
      "-1160",
      "-4499",
      "1479",
      "-695",
      "-465",
      "-1315",
      "1679",
      "-129",
      "3431",
      "1923",
      "1603",
      "558",
      "681",
      "316",
      "517",
      "931",
      "-1597",
      "1999",
      "2024",
      "1094",
      "2276",
      "-1170",
      "2187",
      "-1356",
      "2637",
      "-4500",
      "2373",
      "198",
      "-343",
      "-3082",
      "-1847",
      "-2880",
      "1157",
      "-5368",
      "-2272",
      "-1109",
      "1124",
      "1019",
      "400",
      "2206",
      "-2104",
      "-1096",
      "4705",
      "-449",
      "5993",
      "-2715",
      "1960",
      "1974",
      "2934",
      "-650",
      "-469",
      "2217",
      "2897",
      "-95",
      "5234",
      "3365",
      "2306",
      "2145",
      "219",
      "581",
      "-329",
      "-1951",
      "-4266",
      "2835",
      "-1644",
      "1091",
      "-2275",
      "-1179",
      "543",
      "-137",
      "-4140",
      "3246",
      "-1052",
      "570",
      "239",
      "-807",
      "-2491",
      "-1339",
      "126",
      "-692",
      "126",
      "818",
      "3232",
      "-2254",
      "940",
      "742",
      "2617",
      "-2699",
      "3979",
      "-553",
      "-4052",
      "482",
      "-4450",
      "868",
      "-4709",
      "2149",
      "-6921",
      "5225",
      "-3662",
      "-1023",
      "-3266",
      "883",
      "-866",
      "1313",
      "-1378",
      "2999",
      "-3232",
      "-1523",
      "-3828",
      "-1225",
      "-1558",
      "-876",
      "370",
      "-724",
      "871",
      "1467",
      "-903",
      "1985",
      "-966",
      "658",
      "-2314",
      "-2674",
      "-2828",
      "-2665",
      "-2080",
      "-209",
      "106",
      "-229",
      "1274",
      "1919",
      "1890",
      "-1182",
      "-1368",
      "-1380",
      "1738",
      "461",
      "2772",
      "-2059",
      "-234",
      "-1240",
      "-2278",
      "-4082",
      "-1701",
      "-1594",
      "-3463",
      "-4624",
      "-2674",
      "-2805",
      "-134",
      "-5757",
      "2007",
      "-1910",
      "157",
      "-4324",
      "2344",
      "-504",
      "634",
      "850",
      "-806",
      "2642",
      "672",
      "1604",
      "216",
      "3280",
      "-2012",
      "4234",
      "1165",
      "1532",
      "3059",
      "4106",
      "-3087",
      "-1577",
      "-1277",
      "533",
      "-2323",
      "-1471",
      "-993",
      "1183",
      "-1673",
      "-1661",
      "-4621",
      "-383",
      "-1145",
      "1048",
      "-3225",
      "-504",
      "-2452",
      "111",
      "-1966",
      "1989",
      "-1334",
      "-2670",
      "12",
      "506",
      "-1778",
      "-1307",
      "-3446",
      "1591",
      "-1692",
      "2330",
      "-1704",
      "-534",
      "-2555",
      "70",
      "-2327",
      "3194",
      "-2401",
      "987",
      "-3941",
      "3005",
      "-7104",
      "-3180",
      "-4064",
      "-224",
      "-827",
      "2134",
      "-3941",
      "-1026"
    ).map(BigInt(_, 10))
    doFlowPeekPokeTest("testntt", Ntt.nttComponent(), Seq(testvalue), Goldenvalue)
  }
}
