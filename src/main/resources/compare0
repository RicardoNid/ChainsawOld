
16:57:48 [ScalaTest-run-running-DFGGraphTest] WARN editing DFG - adding to MIMO node cmult2 with no specified port number
16:57:48 [ScalaTest-run-running-DFGGraphTest] WARN editing DFG - adding to MIMO node cmult3 with no specified port number
16:57:48 [ScalaTest-run-running-DFGGraphTest] WARN editing DFG - adding to MIMO node cmult4 with no specified port number
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - folding cmult1 cmult3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - folding class Chainsaw.DFG.BinaryNode class Chainsaw.DFG.BinaryNode
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - folding cmult2 cmult4
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - folding class Chainsaw.DFG.BinaryNode class Chainsaw.DFG.BinaryNode
16:57:48 [ScalaTest-run-running-DFGGraphTest] INFO folding procedure - start folding
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - original:
-----graph:paper1992fig6_a-----
inputs:
input0 input1
outputs:
output0 output1
constants:
cnode0
nodes:
cmult1 cmult2 cmult3 cmult4
edges:
input edges:
cnode0(0) -> 0 -> cmult1(0) noNameEdge: 0 / 1
cnode0(0) -> 0 -> cmult2(0) noNameEdge: 0 / 1
cnode0(0) -> 0 -> cmult3(0) noNameEdge: 0 / 1
cnode0(0) -> 0 -> cmult4(0) noNameEdge: 0 / 1
input0(0) -> 0 -> cmult1(1) noNameEdge: 0 / 1
input1(0) -> 0 -> cmult1(1) noNameEdge: 0 / 1
inner edges:
cmult1(0) -> 0 -> cmult2(1) noNameEdge: 0 / 1
cmult2(0) -> 1 -> cmult3(1) noNameEdge: 0 / 1
cmult3(0) -> 2 -> cmult4(1) noNameEdge: 0 / 1
cmult1(0) -> 0 -> cmult2(2) noNameEdge: 0 / 1
cmult2(0) -> 1 -> cmult3(2) noNameEdge: 0 / 1
cmult3(0) -> 2 -> cmult4(2) noNameEdge: 0 / 1
output edges:
cmult4(0) -> 0 -> output0(0) noNameEdge: 0 / 1
cmult4(0) -> 0 -> output1(0) noNameEdge: 0 / 1
loops:

------end------

16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 0 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 2 - 0 + 1 - 1 = 4
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 0 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 2 - 0 + 1 - 1 = 4
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - original folded delays 0 0 0 0 0 3 4 0 0 0 3 4 0 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 0 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 2 - 0 + 1 - 1 = 4
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 0 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 2 - 0 + 1 - 1 = 4
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - retiming solution:
input1 -> 0 output1 -> 0 cmult1 -> 0 cnode0 -> 0 cmult2 -> 0 cmult3 -> 0 output0 -> 0 input0 -> 0 cmult4 -> 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] INFO retiming procedure - start retiming
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - retimed dfg:
-----graph:paper1992fig6_a-----
inputs:
input0 input1
outputs:
output0 output1
constants:
cnode0
nodes:
cmult1 cmult2 cmult3 cmult4
edges:
input edges:
cnode0(0) -> 0 -> cmult1(0) noNameEdge: 0 / 1
cnode0(0) -> 0 -> cmult2(0) noNameEdge: 0 / 1
cnode0(0) -> 0 -> cmult3(0) noNameEdge: 0 / 1
cnode0(0) -> 0 -> cmult4(0) noNameEdge: 0 / 1
input0(0) -> 0 -> cmult1(1) noNameEdge: 0 / 1
input1(0) -> 0 -> cmult1(1) noNameEdge: 0 / 1
inner edges:
cmult1(0) -> 0 -> cmult2(1) noNameEdge: 0 / 1
cmult2(0) -> 1 -> cmult3(1) noNameEdge: 0 / 1
cmult3(0) -> 2 -> cmult4(1) noNameEdge: 0 / 1
cmult1(0) -> 0 -> cmult2(2) noNameEdge: 0 / 1
cmult2(0) -> 1 -> cmult3(2) noNameEdge: 0 / 1
cmult3(0) -> 2 -> cmult4(2) noNameEdge: 0 / 1
output edges:
cmult4(0) -> 0 -> output0(0) noNameEdge: 0 / 1
cmult4(0) -> 0 -> output1(0) noNameEdge: 0 / 1
loops:

------end------

16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 0 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 2 - 0 + 1 - 1 = 4
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 0 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 2 - 0 + 1 - 1 = 4
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - retimed folded delays 0 0 0 0 0 3 4 0 0 0 3 4 0 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 0 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 2 - 0 + 1 - 1 = 4
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 0 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 2 - 0 + 1 - 1 = 4
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - folded dfg:
-----graph:paper1992fig6_a_folded-----
inputs:
input0 input1
outputs:
output0 output1
constants:
cnode0
nodes:
cmult1 cmult2
edges:
input edges:
cnode0(0) -> 0 -> cmult1(0) noNameEdge: 0 / 2
cnode0(0) -> 0 -> cmult2(0) noNameEdge: 0 / 2
cnode0(0) -> 0 -> cmult1(0) noNameEdge: 1 / 2
cnode0(0) -> 0 -> cmult2(0) noNameEdge: 1 / 2
input0(0) -> 0 -> cmult1(1) noNameEdge: 0 / 2
input1(0) -> 0 -> cmult1(1) noNameEdge: 0 / 2
inner edges:
cmult1(0) -> 0 -> cmult2(1) noNameEdge: 0 / 2
cmult2(0) -> 3 -> cmult1(1) noNameEdge: 1 / 2
cmult1(0) -> 4 -> cmult2(1) noNameEdge: 1 / 2
cmult1(0) -> 0 -> cmult2(2) noNameEdge: 0 / 2
cmult2(0) -> 3 -> cmult1(2) noNameEdge: 1 / 2
cmult1(0) -> 4 -> cmult2(2) noNameEdge: 1 / 2
output edges:
cmult2(0) -> 0 -> output0(0) noNameEdge: 1 / 2
cmult2(0) -> 0 -> output1(0) noNameEdge: 1 / 2
loops:
cmult2 cmult1
------end------

16:57:48 [ScalaTest-run-running-DFGGraphTest] INFO FunctionalConsistencyLogger - input at 0 / 2, output at 1 / 2
[Runtime] SpinalHDL v1.5.0    git head : 83a031922866b078c411ec5529e00f1b6e79f8e7
[Runtime] JVM max memory : 14279.5MiB
[Runtime] Current date : 2021.11.05 16:57:48
[Progress] at 4.598 : Elaborate components
16:57:48 [Thread-83] INFO implementing procedure - start DFG implementing procedure, dataReset = true
16:57:48 [Thread-83] INFO implementing procedure - finish DFG implementation
16:57:48 [Thread-83] INFO implementing procedure - implementing DFG by algo for forwarding DFG
16:57:48 [Thread-83] ERROR implementing procedure - MUX impl failed on:
input0(0) -> 0 -> cmult1(1)|input1(0) -> 0 -> cmult1(1)

**********************************************************************************************
[Warning] Elaboration failed (0 error).
          Spinal will restart with scala trace to help you to find the problem.
**********************************************************************************************

[Progress] at 4.603 : Elaborate components
16:57:48 [Thread-84] INFO implementing procedure - start DFG implementing procedure, dataReset = true
16:57:48 [Thread-84] INFO implementing procedure - finish DFG implementation
16:57:48 [Thread-84] INFO implementing procedure - implementing DFG by algo for forwarding DFG
16:57:48 [Thread-84] ERROR implementing procedure - MUX impl failed on:
input0(0) -> 0 -> cmult1(1)|input1(0) -> 0 -> cmult1(1)
16:57:48 [ScalaTest-run-running-DFGGraphTest] WARN editing DFG - adding to MIMO node cmult2 with no specified port number
16:57:48 [ScalaTest-run-running-DFGGraphTest] WARN editing DFG - adding to MIMO node cmult3 with no specified port number
16:57:48 [ScalaTest-run-running-DFGGraphTest] WARN editing DFG - adding to MIMO node multadd with no specified port number
16:57:48 [ScalaTest-run-running-DFGGraphTest] WARN editing DFG - adding to MIMO node cmult4 with no specified port number
16:57:48 [ScalaTest-run-running-DFGGraphTest] WARN editing DFG - adding to MIMO node multadd with no specified port number
16:57:48 [ScalaTest-run-running-DFGGraphTest] WARN editing DFG - adding to MIMO node multadd with no specified port number
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - folding cmult1 cmult2
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - folding class Chainsaw.DFG.BinaryNode class Chainsaw.DFG.BinaryNode
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - folding cmult4 cmult3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - folding class Chainsaw.DFG.BinaryNode class Chainsaw.DFG.BinaryNode
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - folding multadd multadd
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - folding class Chainsaw.DFG.TrinaryNode class Chainsaw.DFG.TrinaryNode
16:57:48 [ScalaTest-run-running-DFGGraphTest] INFO folding procedure - start folding
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - original:
-----graph:paper1992fig8_a-----
inputs:
input0
outputs:
output0
constants:
cnode1 cnode2 cnode3 cnode4
nodes:
cmult1 cmult2 cmult3 cmult4 multadd
edges:
input edges:
cnode1(0) -> 0 -> cmult1(0) noNameEdge: 0 / 1
cnode2(0) -> 0 -> cmult2(0) noNameEdge: 0 / 1
cnode3(0) -> 0 -> cmult3(0) noNameEdge: 0 / 1
cnode4(0) -> 0 -> cmult4(0) noNameEdge: 0 / 1
input0(0) -> 0 -> cmult1(1) noNameEdge: 0 / 1
inner edges:
cmult1(0) -> 1 -> cmult2(1) noNameEdge: 0 / 1
cmult2(0) -> 1 -> cmult3(1) noNameEdge: 0 / 1
cmult3(0) -> 2 -> multadd(0) noNameEdge: 0 / 1
cmult1(0) -> 0 -> cmult4(1) noNameEdge: 0 / 1
cmult4(0) -> 0 -> multadd(1) noNameEdge: 0 / 1
cmult1(0) -> 0 -> multadd(2) noNameEdge: 0 / 1
output edges:
multadd(0) -> 0 -> output0(0) noNameEdge: 0 / 1
loops:

------end------

16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 0 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 1 = 2
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 2 - 0 + 0 - 1 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - original folded delays 0 0 0 0 3 2 3 0 0 0 0 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 0 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 1 = 2
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 2 - 0 + 0 - 1 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - retiming solution:
cmult2 -> 0 cnode1 -> 0 cmult1 -> 0 cmult3 -> 0 output0 -> 0 input0 -> 0 cnode3 -> 0 cnode4 -> 0 multadd -> 0 cmult4 -> 0 cnode2 -> 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] INFO retiming procedure - start retiming
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - retimed dfg:
-----graph:paper1992fig8_a-----
inputs:
input0
outputs:
output0
constants:
cnode1 cnode2 cnode3 cnode4
nodes:
cmult1 cmult2 cmult3 cmult4 multadd
edges:
input edges:
cnode1(0) -> 0 -> cmult1(0) noNameEdge: 0 / 1
cnode2(0) -> 0 -> cmult2(0) noNameEdge: 0 / 1
cnode3(0) -> 0 -> cmult3(0) noNameEdge: 0 / 1
cnode4(0) -> 0 -> cmult4(0) noNameEdge: 0 / 1
input0(0) -> 0 -> cmult1(1) noNameEdge: 0 / 1
inner edges:
cmult1(0) -> 1 -> cmult2(1) noNameEdge: 0 / 1
cmult2(0) -> 1 -> cmult3(1) noNameEdge: 0 / 1
cmult3(0) -> 2 -> multadd(0) noNameEdge: 0 / 1
cmult1(0) -> 0 -> cmult4(1) noNameEdge: 0 / 1
cmult4(0) -> 0 -> multadd(1) noNameEdge: 0 / 1
cmult1(0) -> 0 -> multadd(2) noNameEdge: 0 / 1
output edges:
multadd(0) -> 0 -> output0(0) noNameEdge: 0 / 1
loops:

------end------

16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 0 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 1 = 2
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 2 - 0 + 0 - 1 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - retimed folded delays 0 0 0 0 3 2 3 0 0 0 0 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 1 - 1 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 0 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 1 - 0 + 1 - 1 = 2
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 2 - 0 + 0 - 1 = 3
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0

16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - calculating delay: 2 * 0 - 0 + 0 - 0 = 0
16:57:48 [ScalaTest-run-running-DFGGraphTest] DEBUG folding procedure - folded dfg:
-----graph:paper1992fig8_a_folded-----
inputs:
input0
outputs:
output0
constants:
cnode1 cnode2 cnode3 cnode4
nodes:
cmult1 cmult4 multadd
edges:
input edges:
cnode1(0) -> 0 -> cmult1(0) noNameEdge: 0 / 2
cnode2(0) -> 0 -> cmult1(0) noNameEdge: 1 / 2
cnode3(0) -> 0 -> cmult4(0) noNameEdge: 1 / 2
cnode4(0) -> 0 -> cmult4(0) noNameEdge: 0 / 2
input0(0) -> 0 -> cmult1(1) noNameEdge: 0 / 2
inner edges:
cmult1(0) -> 3 -> cmult1(1) noNameEdge: 1 / 2
cmult1(0) -> 2 -> cmult4(1) noNameEdge: 1 / 2
cmult4(0) -> 3 -> multadd(0) noNameEdge: 0 / 2
cmult1(0) -> 0 -> cmult4(1) noNameEdge: 0 / 2
cmult4(0) -> 0 -> multadd(1) noNameEdge: 0 / 2
cmult1(0) -> 0 -> multadd(2) noNameEdge: 0 / 2
output edges:
multadd(0) -> 0 -> output0(0) noNameEdge: 0 / 2
loops:
cmult1
------end------

16:57:48 [ScalaTest-run-running-DFGGraphTest] INFO FunctionalConsistencyLogger - input at 0 / 2, output at 0 / 2

requirement failed: schedule collision:
List(0 / 1) List(0 / 1)
java.lang.IllegalArgumentException: requirement failed: schedule collision:
List(0 / 1) List(0 / 1)
	at scala.Predef$.require(Predef.scala:224)
	at Chainsaw.DFG.DFGMUX.impl(DFGMUX.scala:34)
	at Chainsaw.DFG.DFGImpl$$anonfun$4.apply(DFGImpl.scala:46)
	at Chainsaw.DFG.DFGImpl$$anonfun$4.apply(DFGImpl.scala:34)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234)
	at scala.collection.AbstractTraversable.map(Traversable.scala:104)
	at Chainsaw.DFG.DFGImpl.implVertex(DFGImpl.scala:34)
	at Chainsaw.DFG.DFGImpl$$anonfun$implForwarding$1$$anonfun$apply$11.apply(DFGImpl.scala:89)
	at Chainsaw.DFG.DFGImpl$$anonfun$implForwarding$1$$anonfun$apply$11.apply(DFGImpl.scala:88)
	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at Chainsaw.DFG.DFGImpl$$anonfun$implForwarding$1.apply(DFGImpl.scala:88)
	at Chainsaw.DFG.DFGImpl$$anonfun$implForwarding$1.apply(DFGImpl.scala:74)
	at Chainsaw.DFG.DFGGraph.impl(DFGGraph.scala:174)
	at Chainsaw.DFG.DFGTestUtil$$anonfun$testDFG$1$1$$anon$1.<init>(DFGTestUtil.scala:69)
	at Chainsaw.DFG.DFGTestUtil$$anonfun$testDFG$1$1.apply(DFGTestUtil.scala:66)
	at Chainsaw.DFG.DFGTestUtil$$anonfun$testDFG$1$1.apply(DFGTestUtil.scala:66)
	at spinal.core.internals.PhaseCreateComponent$$anonfun$impl$2.apply$mcV$sp(Phase.scala:2227)
	at spinal.core.internals.PhaseCreateComponent$$anonfun$impl$2.apply(Phase.scala:2222)
	at spinal.core.internals.PhaseCreateComponent$$anonfun$impl$2.apply(Phase.scala:2222)
	at spinal.core.fiber.Engine$$anonfun$create$1.apply$mcV$sp(AsyncCtrl.scala:144)
	at spinal.core.fiber.AsyncThread$$anonfun$1.apply$mcV$sp(AsyncThread.scala:58)
	at spinal.core.fiber.EngineContext$$anonfun$newJvmThread$1.apply$mcV$sp(AsyncCtrl.scala:39)
	at spinal.sim.JvmThread.run(SimManager.scala:51)

